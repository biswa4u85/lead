generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id            Int       @id @default(autoincrement())
  company       String?
  name          String
  email         String    @unique
  phone         String?
  emailVerified DateTime?
  password      String?
  image         String?
  postalCode    String?
  sponsorCode   String?
  wallet        Int? @default(0)
  status        String    @default("active")
  role          String    @default("user")
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  payments      Payment[]
}

model Account {
  id                Int     @id @default(autoincrement())
  userId            Int
  provider          String
  providerAccountId String
  type              String?
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Project {
  id                Int     @id @default(autoincrement())
  name              String
  icon              String
  leads             Lead[]
}

model Service {
  id                Int     @id @default(autoincrement())
  name              String
  icon              String
  leads             Lead[]
}

model Lead {
  id                Int     @id @default(autoincrement())
  projectId         Int
  serviceId         Int
  title             String
  description       String
  address           Address?  
  status            String    @default("active")
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  project           Project   @relation(fields: [projectId], references: [id], onDelete: Cascade)
  service           Service   @relation(fields: [serviceId], references: [id], onDelete: Cascade)
}

model Address {
  id          Int  @id @default(autoincrement())
  company     String?
  firstName   String
  lastName    String
  postalCode  String
  phone       String
  email       String
  city        String
  leadId      Int  @unique
  lead        Lead @relation(fields: [leadId], references: [id], onDelete: Cascade)
}

model Payment {
  id                Int     @id @default(autoincrement())
  userId            Int 
  type              String    @default("card")
  refId             String?    
  amount            Int
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  user              User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}